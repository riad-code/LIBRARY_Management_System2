@model Libary_Management_System.Models.AssignRoleViewModel
@{
    ViewData["Title"] = "Assign Role";
}

<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="row justify-content-center mt-4">
    <div class="col-md-6">
        <div class="card shadow">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-user-shield me-2"></i>Assign Role
                </h5>
                <a asp-action="Index" class="btn btn-light btn-sm">
                    <i class="fas fa-arrow-left"></i> Back to User List
                </a>
            </div>

            <div class="card-body">
                <form id="assignRoleForm">
                    <input type="hidden" asp-for="UserId" id="UserId" />

                    <div class="mb-3">
                        <label asp-for="SelectedRole" class="form-label fw-semibold">Select Role:</label>
                        <select asp-for="SelectedRole" asp-items="@(new SelectList(Model.Roles))" class="form-select" id="SelectedRole">
                            <option disabled selected>-- Select a role --</option>
                        </select>
                        <span asp-validation-for="SelectedRole" class="text-danger"></span>
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-check-circle"></i> Update Role
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('assignRoleForm').addEventListener('submit', function (e) {
        e.preventDefault();

        var userId = document.getElementById('UserId').value;
        var selectedRole = document.getElementById('SelectedRole').value;

        fetch('/UserManagement/AssignRole', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ UserId: userId, SelectedRole: selectedRole })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Role Updated',
                    text: data.message,
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = '/UserManagement/Index';
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed',
                    text: data.message
                });
            }
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Unexpected error occurred.'
            });
            console.error('Error:', error);
        });
    });
</script>
